#!/bin/bash

Syyyymmddhh=2015010100
Eyyyymmddhh=2015013100
DATE_CMD="gdate" # command of linux-like "date" in the system
njobs_max=6     

inc="1 day"
njobs=0
while ((Syyyymmddhh <= Eyyyymmddhh)); do


    # PARSER
    yyyy=$(echo $Syyyymmddhh | cut -c1-4)
      mm=$(echo $Syyyymmddhh | cut -c5-6)
      dd=$(echo $Syyyymmddhh | cut -c7-8)
      hh=$(echo $Syyyymmddhh | cut -c9-10)

    
    ((njobs+=1))
    echo "job # ${njobs} :  $Syyyymmddhh"

    l4_sss_path="TEST_DATA/l4_sss_esacci/${yyyy}/${yyyy}${mm}/${yyyy}${mm}${dd}/ESACCI-SEASURFACESALINITY-L4-SSS-MERGED_OI_7DAY_RUNNINGMEAN_DAILY_25km-${yyyy}${mm}${dd}-fv3.21.nc"

    PYTHONPATH=../../pycommon ./merge_sal_esacci_woa18_daily.py \
        --config_path config/config.merge_sal_esacci_woa18.yaml \
        --woa18_filled_path ../woa/sss_woa18_10m/filled_sss_s01_e12.nc \
        --l4_sss_path ${l4_sss_path} \
        --radius 10 \
        --output_file_path TEST_DATA/remapped_l4_sss_v2/NEW2_sss_remapped_${yyyy}${mm}${dd}_radius10.nc > TEST_DATA/remapped_l4_sss_v2/log.${yyyy}${mm}${dd} 2>&1 &

 
    if [ $njobs -ge $njobs_max ]; then
        echo "wait"
        echo "---------------------------------------------"
        wait
        njobs=0
    fi


    timefmt="$yyyy/$mm/$dd $hh:00:00"
    Syyyymmddhh=$($DATE_CMD -ud "$inc $timefmt" +'%Y%m%d%H')

done


wait
 
